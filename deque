class Deque:
    def __init__(self, size):
        self.objects = [None] * size
        self.size = size
        self.front = 0
        self.rear = 0

    def isFull(self):
        if (self.front == 0 and self.rear == self.size - 1) or (self.front == self.rear + 1):
            return True
        else:
            return False

    def isEmpty(self):
        if self.front == -1:
            return True
        else:
            return False

    def resize(self, new_size, new_value=0):
        if self.isFull():
            element_size = len(self.size[0])
            new_size = new_size * 2
            while len(self.size) <= new_size:
                n = tuple(new_value for i in range(element_size))
                self.size.append(n)
        else:
            self.size = self[:new_size]
        return self

    def addFirst(self, data, new_size):
        if self.isFull():
            self.resize(new_size)
            print('d')
            return
        elif self.isEmpty():
            self.front = 0
            self.rear = 0
        elif self.front == 0:
            self.front = self.size - 1
        else:
            self.front = self.front - 1
        self.objects[self.front] = data

    def addLast(self, data):
        if self.isFull():
            print("deque is full")
            return
        elif self.isEmpty():
            self.front = 0
            self.rear = 0
        elif self.rear == self.size - 1:
            self.rear = 0
        else:
            self.rear += 1
        self.objects[self.rear] = data

    def removeFirst(self):
        if self.isEmpty():
            print("deque is empty")
            return
        elif self.front == self.rear:
            self.front = -1
            self.rear = -1
        elif self.front == self.size - 1:
            self.front = 0
        else:
            self.front = self.front + 1

    def removeLast(self):
        if self.isEmpty():
            print("deque is empty")
            return
        elif self.front == self.rear:
            self.front = -1
            self.rear = -1
        elif self.rear == 0:
            self.rear = self.size - 1
        else:
            self.rear = self.rear - 1

    def first(self):
        if self.isEmpty():
            print("deque is empty")
            return
        else:
            return self.objects[self.front]

    def last(self):
        if self.isEmpty():
            print("deque is empty")
            return
        else:
            return self.objects[self.rear]

    def display(self):
        current = self.front
        if self.front is None:
            print("The list is empty")
            return
        print("Your Linked List: ")
        while current is not None:
            current = str(current).next
        return self.objects


if __name__ == "__main__":
    deq = Deque(10)
    deq.addFirst(7, new_size=0)
    deq.removeLast()
    deq.removeFirst()
    deq.display()

    print(deq.first())
    print(deq.last())
